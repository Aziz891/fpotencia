{"name":"fPotencia","tagline":"Power flow library in C++","body":"# What is fPotencia?\r\nfPotencia is a library for positive sequence power flow simulations.\r\nfPotencia is specifically designed to be used as a library, it is made to allow you to run it in\r\nparallel taking the most of your simulation hardware. It is implemented in C++ because at the\r\nmoment C++ seems to be the most popular high performance language.\r\n\r\n# Programming environments\r\nI have tried to keep fPotencia as cross-platform as possible. Standard C++ is itself cross platform,\r\nthat means that with an adequate compiler you can have the library working in the operative\r\nsystem of your choice. The code is written using the C++11 standard.\r\nSince I work with Windows and Linux machines and I do not own an Apple computer, I will\r\nonly be giving examples and instructions for Windows and Linux. The examples and instructions\r\nmight be taken as some sort of guidance for the rest of platforms.\r\nSpecifically, in Linux I develop using Netbeans (v8.0.x) with its C/C++ plug-in, and in\r\nWindows I develop using visual studio 2013 or Netbeans as well. You will find both IDE projects\r\nin the fPotencia folder along with the code.\r\nThe code { src } and libraries { libs } are kept separated from the diverse projects, this\r\nmeans that the libraries and the code are common to all the provided IDE projects.\r\n\r\n# Installing the dependencies\r\nfPotencia depends on some external libraries to handle the linear algebra operations with complex\r\nnumbers.\r\n**Eigen:** is a powerful linear algebra library.\r\n\r\n• Windows: If you use the Visual Studio project or the Netbeans project, then you don’t\r\nneed to do anything. Eigen will be automatically included. You will find Eigen in the\r\nfolder blow.\r\n`<fPotencia folder>/libs/eigen3`\r\n\r\n• Linux(Ubuntu): You can install Eigen through the package manager:\r\n`sudo apt-get install libeigen3-dev.`\r\nIf you cannot find a package for your distribution, then just add the Eigen folder to you\r\nC++ project. By adding the libs folder to your C++ project in the Includes field of the\r\nproject configuration.\r\n\r\n#Compiling f Potencia\r\nfPotencia is written in standard C++ 2011, this means that you are supposed to be able to compile\r\nit under any architecture if using the correct compiler.\r\nFor the production of it I have used indiscriminately the gcc compiler under Linux and\r\nthe gcc compiler provided by the MinGW project under Windows (They are supposed to be the\r\nsame). As development environment I use Netbeans 8.0+ and I provide both Linux and Windows\r\nNetbens projects to help you start. I you prefer another IDE, it should be straight forward to\r\ninclude the code since you just need to include all the files in the `/src` folder. There are no special\r\nconfigurations, all the steps are explained in this document.\r\n\r\n#Using fPotencia in your project\r\nfPotencia itself is compiled as a static library. `fpotencia.a` in Linux, and `fpotencia.lib` in\r\nWindows. I was investigating about the difference of dynamic and static libraries and I couldn’t\r\nfind a good reason to not having it static, but of course you are free to compile it as you want.\r\n\r\n##Visual Studio\r\nVisual Studio is only available for Windows.\r\nIn the project menu page:\r\n`project configuration {menu} > configuration properties > VC++ Directories>`\r\n\r\n• `Include directories` : Directories of the header files used in your project (yes, the\r\ndirectory where the fPotencia headers are).\r\n• `Library directories` : Directory where fpotencia.lib is located.\r\n\r\n##Netbeans\r\nNetbeans is available for both Windows and Linux.\r\nIn the project menu page:\r\nproject configuration `{menu} > Build >`\r\n• `C++ Compiler > Include directories` : Directories of the header files used in your\r\nproject (yes, the directory where the fpotencia headers are). For example `../../../src;`\r\n`../../../libs` for fPotencia as you find it in the GIT repository.\r\n• `Linker > Libraries` : Select the file fpotencia.lib if you are under Windows or\r\nfpotencia.a if you are under Linux.\r\n###x64\r\nThe link below explains how to configure MinGW (GCC for Windows) to work with Netbeans.\r\n`http://wiki.netbeans.org/HowToCreate64-BitC/C++WindowsProgram`\r\nWhen using MinGW (64 bits) under windows, you must set the compiler additional options\r\nto `-static -static-libgcc -static-libstdc++ `otherwise the compiled program will not\r\nwork as expected.\r\n\r\n### Authors and Contributors\r\nThis library is made by Santiago Peñate Vera, researcher at DNV GL.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}